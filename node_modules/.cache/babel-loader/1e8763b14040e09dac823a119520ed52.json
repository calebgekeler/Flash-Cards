{"ast":null,"code":"var _jsxFileName = \"/Users/Neo/Thinkful/qualified/Project_Flashcards_Qualified_1/src/Layout/index.js\";\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport { listDecks, deleteDeck, updateDeck, createCard, createDeck, readDeck } from \"../utils/api/index\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport CreateDeckBtn from \"./home/CreateDeckBtn\";\nimport Decks from \"./home/Decks\";\nimport Study from \"./home/Study\";\nimport BreadCrumb from \"./BreadCrumb\";\nimport AddCard from \"./AddCard\";\nimport CreateDeck from \"./CreateDeck\";\nimport Deck from \"./Deck\";\nimport EditCard from \"./EditCard\";\nimport EditDeck from \"./EditDeck\";\n\nfunction Layout() {\n  const history = useHistory();\n  const [deck, setDeck] = useState([]);\n  const [studyDeck, setStudyDeck] = useState(undefined); //const [sideToDisplay, setDisplay] = useState(undefined);\n\n  let [counter, setCounter] = useState(0);\n  let [isNextBtnOn, setNextBtn] = useState(false); //deleteCard(6)\n\n  const initialCreateDeckFormData = {\n    id: 0,\n    name: \"\",\n    description: \"\"\n  };\n  const initialAddCardFormData = {\n    front: \"\",\n    back: \"\",\n    deckId: 0,\n    id: 0\n  };\n  let [createDeckData, setCreateDeckData] = useState({ ...initialCreateDeckFormData\n  });\n  let [addCardData, setAddCardData] = useState({ ...initialAddCardFormData\n  }); // console.log(\"ADD CARD DATA\", addCardData)\n\n  const fnObj = {\n    deleteDeckHandler: event => {\n      if (window.confirm(\"Are you sure you want to delete this deck?\")) {\n        deleteDeck(event.target.id);\n        fnObj.deckFetcher();\n        history.push(\"/\");\n      }\n    },\n    deckFetcher: async () => {\n      const deckSet = await Promise.resolve(listDecks());\n      return setDeck(deckSet);\n    },\n    // nextHandler: () => {\n    //   if(counter<studyDeck.cards.length-1){\n    //     setCounter(counter+=1);\n    //     setNextBtn(false);\n    //     setDisplay(studyDeck.cards[counter].front);\n    //   }\n    //   else{\n    //     if(window.confirm(\"Press OK to restart deck and CANCEL to return home\")){\n    //       setNextBtn(false);\n    //       setDisplay(studyDeck.cards[counter].front);\n    //     }\n    //     else{\n    //       history.push(\"/\");\n    //       setNextBtn(false);\n    //     }\n    //     setCounter(0);\n    //   }\n    // },\n    // flipHandler: () => {\n    //   if(sideToDisplay===studyDeck.cards[counter].front){\n    //     setDisplay(studyDeck.cards[counter].back);\n    //     setNextBtn(true);\n    //     return   \n    //   }\n    //   if(sideToDisplay===studyDeck.cards[counter].back){\n    //     setDisplay(studyDeck.cards[counter].front);\n    //     setNextBtn(false);\n    //     return\n    //   }\n    // },\n    studyDeckSetter: async id => {\n      if (id === undefined) {\n        id = 1;\n      }\n\n      ; //sets an arbitrary id value so the function compiles but it is over written when necessary\n\n      const item = await readDeck(id);\n      const resolved = await Promise.resolve(item);\n      setStudyDeck(resolved); //console.log('STUDY DECK', studyDeck)\n    },\n    addCardFormChangeHandler: ({\n      target\n    }) => {\n      setAddCardData({ ...addCardData,\n        [target.name]: target.value\n      });\n      console.log(addCardData);\n    },\n    addCardSubmitHandler: async event => {\n      event.preventDefault();\n      await createCard(studyDeck.id, addCardData);\n      setAddCardData({ ...initialAddCardFormData\n      });\n    },\n    createDeckChangeHandler: ({\n      target\n    }) => {\n      setCreateDeckData({ ...createDeckData,\n        [target.name]: target.value\n      });\n      console.log(createDeckData);\n    },\n    createDeckSubmitHandler: async event => {\n      event.preventDefault();\n      await createDeck(createDeckData);\n      setCreateDeckData({ ...initialCreateDeckFormData\n      });\n      history.push(\"/\");\n    },\n    editCardFormChangeHandler: ({\n      target\n    }) => {\n      setAddCardData({ ...addCardData,\n        [target.name]: target.value\n      });\n      console.log(addCardData);\n    }\n  };\n  useEffect(() => {//fnObj.studyDeckSetter(deck[0])\n  }, []);\n  useEffect(() => {\n    fnObj.deckFetcher();\n  }, [studyDeck, counter]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CreateDeckBtn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Decks, {\n    deck: deck,\n    fnObj: fnObj,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/decks/:deckId/study\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BreadCrumb, {\n    studyDeck: studyDeck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Study, {\n    fnObj: fnObj,\n    studyDeck: studyDeck,\n    counter: counter,\n    isNextBtnOn: isNextBtnOn,\n    setCounter: setCounter,\n    setNextBtn: setNextBtn,\n    setCounter: setCounter,\n    setNextBtn: setNextBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/decks/:deckId/cards/new\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BreadCrumb, {\n    studyDeck: studyDeck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(AddCard, {\n    studyDeck: studyDeck,\n    fnObj: fnObj,\n    addCardData: addCardData,\n    setAddCardData: setAddCardData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/decks/new\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BreadCrumb, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CreateDeck, {\n    fnObj: fnObj,\n    createDeckData: createDeckData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/decks/:deckId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BreadCrumb, {\n    studyDeck: studyDeck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Deck, {\n    studyDeck: studyDeck,\n    fnObj: fnObj,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/decks/:deckId/cards/:cardId/edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(EditCard, {\n    studyDeck: studyDeck,\n    fnObj: fnObj,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/decks/:deckId/edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BreadCrumb, {\n    studyDeck: studyDeck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(EditDeck, {\n    fnObj: fnObj,\n    studyDeck: studyDeck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NotFound, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default Layout;","map":{"version":3,"sources":["/Users/Neo/Thinkful/qualified/Project_Flashcards_Qualified_1/src/Layout/index.js"],"names":["React","useState","useEffect","Fragment","Switch","Route","useHistory","listDecks","deleteDeck","updateDeck","createCard","createDeck","readDeck","Header","NotFound","CreateDeckBtn","Decks","Study","BreadCrumb","AddCard","CreateDeck","Deck","EditCard","EditDeck","Layout","history","deck","setDeck","studyDeck","setStudyDeck","undefined","counter","setCounter","isNextBtnOn","setNextBtn","initialCreateDeckFormData","id","name","description","initialAddCardFormData","front","back","deckId","createDeckData","setCreateDeckData","addCardData","setAddCardData","fnObj","deleteDeckHandler","event","window","confirm","target","deckFetcher","push","deckSet","Promise","resolve","studyDeckSetter","item","resolved","addCardFormChangeHandler","value","console","log","addCardSubmitHandler","preventDefault","createDeckChangeHandler","createDeckSubmitHandler","editCardFormChangeHandler"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, Fragment} from \"react\";\nimport {Switch, Route, useHistory} from \"react-router-dom\";\nimport {listDecks, deleteDeck, updateDeck, createCard, createDeck, readDeck} from \"../utils/api/index\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport CreateDeckBtn from \"./home/CreateDeckBtn\";\nimport Decks from \"./home/Decks\";\nimport Study from \"./home/Study\";\nimport BreadCrumb from \"./BreadCrumb\";\nimport AddCard from \"./AddCard\";\nimport CreateDeck from \"./CreateDeck\";\nimport Deck from \"./Deck\";\nimport EditCard from \"./EditCard\";\nimport EditDeck from \"./EditDeck\";\n\n\n\n\nfunction Layout() {\n  const history=useHistory();\n\n  const [deck, setDeck] = useState([]);\n  const [studyDeck, setStudyDeck] = useState(undefined);\n  //const [sideToDisplay, setDisplay] = useState(undefined);\n  let [counter, setCounter] = useState(0);\n  let [isNextBtnOn, setNextBtn] = useState(false);\n  //deleteCard(6)\n\n  const initialCreateDeckFormData={\n    id: 0,\n    name: \"\",\n    description: \"\"\n  }\n\n  const initialAddCardFormData={\n    front: \"\",\n    back: \"\",\n    deckId: 0,\n    id: 0\n  }\n\n  let [createDeckData, setCreateDeckData] = useState({...initialCreateDeckFormData})\n\n  let [addCardData, setAddCardData] = useState({...initialAddCardFormData})\n  // console.log(\"ADD CARD DATA\", addCardData)\n\n  \n  const fnObj={\n    deleteDeckHandler: (event) => {\n      if(window.confirm(\"Are you sure you want to delete this deck?\")){\n        deleteDeck(event.target.id);\n        fnObj.deckFetcher();\n        history.push(\"/\")\n      }\n    },\n    deckFetcher: async () =>{\n      const deckSet = await Promise.resolve(listDecks());\n      return setDeck(deckSet);\n    },\n    // nextHandler: () => {\n    //   if(counter<studyDeck.cards.length-1){\n    //     setCounter(counter+=1);\n    //     setNextBtn(false);\n    //     setDisplay(studyDeck.cards[counter].front);\n    //   }\n    //   else{\n    //     if(window.confirm(\"Press OK to restart deck and CANCEL to return home\")){\n    //       setNextBtn(false);\n    //       setDisplay(studyDeck.cards[counter].front);\n    //     }\n    //     else{\n    //       history.push(\"/\");\n    //       setNextBtn(false);\n    //     }\n    //     setCounter(0);\n    //   }\n    // },\n    // flipHandler: () => {\n    //   if(sideToDisplay===studyDeck.cards[counter].front){\n    //     setDisplay(studyDeck.cards[counter].back);\n    //     setNextBtn(true);\n    //     return   \n    //   }\n    //   if(sideToDisplay===studyDeck.cards[counter].back){\n    //     setDisplay(studyDeck.cards[counter].front);\n    //     setNextBtn(false);\n    //     return\n    //   }\n    // },\n    studyDeckSetter: async (id) => {\n      if(id===undefined){id=1}; //sets an arbitrary id value so the function compiles but it is over written when necessary\n      const item = await readDeck(id);\n      const resolved = await Promise.resolve(item);\n      setStudyDeck(resolved);\n      //console.log('STUDY DECK', studyDeck)\n    },\n    addCardFormChangeHandler: ({target}) => {\n      setAddCardData({\n        ...addCardData, \n        [target.name]: target.value,\n      })\n      console.log(addCardData)\n    },\n    addCardSubmitHandler: async (event) => {\n      event.preventDefault();\n      await createCard(studyDeck.id, addCardData);\n      setAddCardData({...initialAddCardFormData});\n    },\n    createDeckChangeHandler: ({target}) => {\n      setCreateDeckData({\n        ...createDeckData,\n        [target.name]: target.value\n      })\n      console.log(createDeckData)\n    },\n    createDeckSubmitHandler: async (event) => {\n      event.preventDefault();\n      await createDeck(createDeckData);\n      setCreateDeckData({...initialCreateDeckFormData});\n      history.push(\"/\");\n    },\n    editCardFormChangeHandler: ({target}) => {\n      setAddCardData({\n        ...addCardData, \n        [target.name]: target.value,\n      })\n      console.log(addCardData)\n    },\n  }\n  useEffect(()=>{\n    //fnObj.studyDeckSetter(deck[0])\n  }, [])\n\n  useEffect(()=>{\n   fnObj.deckFetcher();\n  }, [studyDeck, counter])\n  return (\n    <Fragment>\n      <Header />\n      <div className=\"container\">\n        <Switch>\n          <Route exact={true} path={\"/\"}>\n            <CreateDeckBtn />\n            <Decks \n              deck={deck} \n              fnObj={fnObj} \n            />\n          </Route>\n          <Route exact={true} path={\"/decks/:deckId/study\"}>\n            <BreadCrumb \n              studyDeck={studyDeck}\n            />\n            <Study \n              fnObj={fnObj} \n              studyDeck={studyDeck}\n              counter={counter}\n              isNextBtnOn={isNextBtnOn}\n              setCounter={setCounter}\n              setNextBtn={setNextBtn}\n              setCounter={setCounter}\n              setNextBtn={setNextBtn}\n            />\n          </Route>\n          <Route exact={true} path={\"/decks/:deckId/cards/new\"}>\n            <BreadCrumb \n              studyDeck={studyDeck}\n            />\n            <AddCard \n              studyDeck={studyDeck}\n              fnObj={fnObj}\n              addCardData={addCardData}\n              setAddCardData={setAddCardData}\n            />\n          </Route>\n          <Route exact={true} path={\"/decks/new\"}>\n            <BreadCrumb />\n            <CreateDeck \n              fnObj={fnObj}\n              createDeckData={createDeckData}\n            />\n          </Route>\n          <Route exact={true} path={\"/decks/:deckId\"}>\n            <BreadCrumb \n              studyDeck={studyDeck}\n            />\n            <Deck \n              studyDeck={studyDeck}\n              fnObj={fnObj}\n            />\n          </Route>\n          <Route exact={true} path={\"/decks/:deckId/cards/:cardId/edit\"}>\n            <EditCard \n              studyDeck={studyDeck}\n              fnObj={fnObj}\n            />\n          </Route>\n          <Route exact={true} path={\"/decks/:deckId/edit\"}>\n            <BreadCrumb studyDeck={studyDeck}/>\n            <EditDeck fnObj={fnObj} studyDeck={studyDeck}/>\n          </Route>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch> \n      </div>\n    </Fragment>\n  );\n}\n\nexport default Layout;"]},"metadata":{},"sourceType":"module"}