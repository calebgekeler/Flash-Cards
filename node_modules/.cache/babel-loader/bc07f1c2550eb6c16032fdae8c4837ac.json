{"ast":null,"code":"var _jsxFileName = \"/Users/Neo/Thinkful/qualified/Project_Flashcards_Qualified_1/src/Layout/AddCard.js\";\nimport React, { useEffect, useState } from \"react\";\nimport CardForm from \"./CardForm\";\nimport { readDeck } from \"../utils/api/index\";\nimport { useParams } from \"react-router-dom\";\n\nfunction AddCard({\n  studyDeck,\n  fnObj,\n  addCardData,\n  setAddCardData\n}) {\n  let result = \"JSX\";\n  let cardId = 20;\n  let allCards = [];\n  const url = `http://localhost:5000/cards`;\n  const {\n    deckId\n  } = useParams();\n  let [deck, setDeck] = useState({}); // async function fetchJson(url, options) {\n  //   try {\n  //     const response = await fetch(url, options);\n  //     if (response.status < 200 || response.status > 399) {\n  //       throw new Error(`${response.status} - ${response.statusText}`);\n  //     }\n  //     return await response.json();\n  //   } catch (error) {\n  //     if (error.name !== \"AbortError\") {\n  //       throw error;\n  //     }\n  //   }\n  // }\n  // async function getBiggerNumberForCardId(){\n  //   const response = fetchJson(url);\n  //   allCards = await Promise.resolve(response);\n  //   for(let card in allCards){\n  //     if(allCards[card].id>cardId){cardId=allCards[card].id};\n  //   }\n  //   cardId+=1;\n  // }\n  // getBiggerNumberForCardId()\n\n  async function getDeck() {\n    const item = await readDeck(deckId);\n    const resolved = await Promise.resolve(item);\n    setDeck(resolved);\n    console.log(deck);\n  }\n\n  useEffect(() => {\n    getDeck();\n    setAddCardData({\n      [addCardData.deckId]: addCardData.deckId = deck.id,\n      [addCardData.deckId]: addCardData.id = cardId\n    });\n    setAddCardData({ ...addCardData\n    });\n  }, []);\n  result = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, deck.name, \": Add Card\")), /*#__PURE__*/React.createElement(CardForm, {\n    studyDeck: studyDeck,\n    fnObj: fnObj,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }));\n  return result;\n}\n\nexport default AddCard;","map":{"version":3,"sources":["/Users/Neo/Thinkful/qualified/Project_Flashcards_Qualified_1/src/Layout/AddCard.js"],"names":["React","useEffect","useState","CardForm","readDeck","useParams","AddCard","studyDeck","fnObj","addCardData","setAddCardData","result","cardId","allCards","url","deckId","deck","setDeck","getDeck","item","resolved","Promise","resolve","console","log","id","name"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,QAAR,QAAuB,oBAAvB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;;AAGA,SAASC,OAAT,CAAiB;AAACC,EAAAA,SAAD;AAAYC,EAAAA,KAAZ;AAAmBC,EAAAA,WAAnB;AAAgCC,EAAAA;AAAhC,CAAjB,EAAiE;AAC/D,MAAIC,MAAM,GAAC,KAAX;AACA,MAAIC,MAAM,GAAC,EAAX;AACA,MAAIC,QAAQ,GAAC,EAAb;AACA,QAAMC,GAAG,GAAI,6BAAb;AACA,QAAM;AAACC,IAAAA;AAAD,MAASV,SAAS,EAAxB;AAEA,MAAI,CAACW,IAAD,EAAOC,OAAP,IAAiBf,QAAQ,CAAC,EAAD,CAA7B,CAP+D,CAS/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAegB,OAAf,GAAwB;AACtB,UAAMC,IAAI,GAAG,MAAMf,QAAQ,CAACW,MAAD,CAA3B;AACA,UAAMK,QAAQ,GAAG,MAAMC,OAAO,CAACC,OAAR,CAAgBH,IAAhB,CAAvB;AACAF,IAAAA,OAAO,CAACG,QAAD,CAAP;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACD;;AAKDf,EAAAA,SAAS,CAAC,MAAK;AACbiB,IAAAA,OAAO;AACPR,IAAAA,cAAc,CAAC;AACb,OAACD,WAAW,CAACM,MAAb,GAAsBN,WAAW,CAACM,MAAZ,GAAmBC,IAAI,CAACS,EADjC;AAEb,OAAChB,WAAW,CAACM,MAAb,GAAsBN,WAAW,CAACgB,EAAZ,GAAeb;AAFxB,KAAD,CAAd;AAIAF,IAAAA,cAAc,CAAC,EAAC,GAAGD;AAAJ,KAAD,CAAd;AACD,GAPQ,EAON,EAPM,CAAT;AASAE,EAAAA,MAAM,gBACJ;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKK,IAAI,CAACU,IAAV,eADF,CADF,eAIE,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAEnB,SAArB;AAAgC,IAAA,KAAK,EAAEC,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AASA,SAAOG,MAAP;AACD;;AAED,eAAeL,OAAf","sourcesContent":["import React, {useEffect, useState} from \"react\"\nimport CardForm from \"./CardForm\"\nimport {readDeck} from \"../utils/api/index\"\nimport {useParams} from \"react-router-dom\"\n\n\nfunction AddCard({studyDeck, fnObj, addCardData, setAddCardData}){\n  let result=\"JSX\";\n  let cardId=20;\n  let allCards=[]\n  const url = `http://localhost:5000/cards`;\n  const {deckId}=useParams();\n\n  let [deck, setDeck]= useState({});\n\n  // async function fetchJson(url, options) {\n  //   try {\n  //     const response = await fetch(url, options);\n  //     if (response.status < 200 || response.status > 399) {\n  //       throw new Error(`${response.status} - ${response.statusText}`);\n  //     }\n  //     return await response.json();\n  //   } catch (error) {\n  //     if (error.name !== \"AbortError\") {\n  //       throw error;\n  //     }\n  //   }\n  // }\n  // async function getBiggerNumberForCardId(){\n  //   const response = fetchJson(url);\n  //   allCards = await Promise.resolve(response);\n  //   for(let card in allCards){\n  //     if(allCards[card].id>cardId){cardId=allCards[card].id};\n  //   }\n  //   cardId+=1;\n  // }\n  // getBiggerNumberForCardId()\n\n  async function getDeck(){\n    const item = await readDeck(deckId)\n    const resolved = await Promise.resolve(item)\n    setDeck(resolved);\n    console.log(deck);\n  }\n\n  \n\n  \n  useEffect(()=> { \n    getDeck();\n    setAddCardData({\n      [addCardData.deckId]: addCardData.deckId=deck.id,\n      [addCardData.deckId]: addCardData.id=cardId,\n    }); \n    setAddCardData({...addCardData})\n  }, [])\n  \n  result=(\n    <div className=\"container\">\n      <div className=\"row\">\n        <h3>{deck.name}: Add Card</h3>\n      </div>\n      <CardForm studyDeck={studyDeck} fnObj={fnObj}/>\n    </div>\n  ) \n\n  return result\n}\n\nexport default AddCard;"]},"metadata":{},"sourceType":"module"}