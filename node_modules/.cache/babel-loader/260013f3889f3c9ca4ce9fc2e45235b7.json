{"ast":null,"code":"var _jsxFileName = \"/Users/Neo/Thinkful/qualified/Project_Flashcards_Qualified_1/src/Layout/home/Study.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport BreadCrumb from \"../BreadCrumb\";\n\nfunction Study({\n  deck\n}) {\n  const deckId = useParams();\n  let [counter, setCounter] = useState(0);\n  let [isNextBtnOn, setNextBtn] = useState(false);\n  const [topic, setTopic] = useState(deck.find(item => deckId.deckId == item.id));\n  const [sideToDisplay, setDisplay] = useState(topic.cards[counter].front); //console.log(\"DECK ID\", deckId)\n  //console.log('DECK', deck)\n  //console.log('TOPIC', topic)\n\n  const flipHandler = () => {\n    //console.log('DID IT WORK?')\n    if (sideToDisplay === topic.cards[counter].front) {\n      setNextBtn(true);\n      return setDisplay(topic.cards[counter].back);\n    }\n\n    if (sideToDisplay === topic.cards[counter].back) {\n      setNextBtn(false);\n      return setDisplay(topic.cards[counter].front);\n    }\n  }; //console.log(\"SIDE TO DISPLAY\", sideToDisplay)\n\n\n  const nextHandler = () => {\n    setCounter(counter += 1);\n    setNextBtn(false);\n    setDisplay(topic.cards[counter].front);\n    return renderCard();\n  };\n\n  function renderCard() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, \"Study: \", topic.name, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-title px-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, \"Card \", topic.cards[counter].id, \" of \", topic.cards.length)), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, sideToDisplay), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row px-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: flipHandler,\n      className: \"m-2 btn btn-secondary col-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }, \"Flip\"), isNextBtnOn ? /*#__PURE__*/React.createElement(\"button\", {\n      onClick: nextHandler,\n      className: \"m-2 btn btn-primary col-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, \"Next\") : null)));\n  }\n\n  let result = renderCard();\n  useEffect(() => {\n    renderCard();\n  }, [counter]);\n  return result;\n}\n\nexport default Study;","map":{"version":3,"sources":["/Users/Neo/Thinkful/qualified/Project_Flashcards_Qualified_1/src/Layout/home/Study.js"],"names":["React","useEffect","useState","useParams","BreadCrumb","Study","deck","deckId","counter","setCounter","isNextBtnOn","setNextBtn","topic","setTopic","find","item","id","sideToDisplay","setDisplay","cards","front","flipHandler","back","nextHandler","renderCard","name","length","result"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {useParams} from \"react-router-dom\"\nimport BreadCrumb from \"../BreadCrumb\"\n\nfunction Study({deck}){\n\n  const deckId = useParams();\n  let [counter, setCounter] = useState(0);\n  let [isNextBtnOn, setNextBtn] = useState(false)\n  const [topic, setTopic] = useState(deck.find((item)=>deckId.deckId==item.id))\n  const [sideToDisplay, setDisplay] = useState(topic.cards[counter].front)\n  //console.log(\"DECK ID\", deckId)\n  //console.log('DECK', deck)\n  //console.log('TOPIC', topic)\n\n  const flipHandler = () =>{\n    //console.log('DID IT WORK?')\n    if(sideToDisplay===topic.cards[counter].front){\n      setNextBtn(true);\n      return setDisplay(topic.cards[counter].back);   \n    }\n    if(sideToDisplay===topic.cards[counter].back){\n      setNextBtn(false);\n      return setDisplay(topic.cards[counter].front);\n    }\n  }\n  //console.log(\"SIDE TO DISPLAY\", sideToDisplay)\n  const nextHandler = () =>{\n    setCounter(counter+=1);\n    setNextBtn(false);\n    setDisplay(topic.cards[counter].front);\n    return renderCard();\n  }\n\n\n  function renderCard(){\n    return(\n      <>\n        <h1>Study: {topic.name} </h1>\n        <div className=\"card\">\n          <div className=\"card-title px-2\">\n            <h4>Card {topic.cards[counter].id} of {topic.cards.length}</h4>\n          </div>\n          <p className=\"card-body\">\n            {sideToDisplay}\n          </p>\n            <div className=\"row px-3\">\n              <button onClick={flipHandler} className=\"m-2 btn btn-secondary col-1\">Flip</button>\n              {isNextBtnOn ?\n              <button onClick={nextHandler} className=\"m-2 btn btn-primary col-1\">Next</button> : null}\n            </div>\n        </div>\n      </>\n    )\n  }\n  let result = renderCard();\n\n  useEffect(()=>{\n    renderCard();\n  }, [counter])\n\n  return result\n}\n\n\n\nexport default Study;"]},"metadata":{},"sourceType":"module"}