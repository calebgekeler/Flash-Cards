{"ast":null,"code":"var _jsxFileName = \"/Users/Neo/Thinkful/qualified/Project_Flashcards_Qualified_1/src/Layout/AddCard.js\";\nimport React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport CardForm from \"./CardForm\";\n\nfunction AddCard({\n  studyDeck,\n  fnObj,\n  addCardData,\n  setAddCardData\n}) {\n  let result = \"JSX\";\n  let cardId = 0;\n  let allCards = [];\n  const url = `http://localhost:5000/cards`;\n\n  async function fetchJson(url, options) {\n    try {\n      const response = await fetch(url, options);\n\n      if (response.status < 200 || response.status > 399) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      if (error.name !== \"AbortError\") {\n        throw error;\n      }\n    }\n  }\n\n  async function getBiggerNumberForCardId() {\n    const response = fetchJson(url);\n    allCards = await Promise.resolve(response);\n\n    for (let card in allCards) {\n      if (allCards[card].id > cardId) {\n        cardId = allCards[card].id;\n      }\n\n      ;\n    }\n\n    cardId += 1;\n  }\n\n  getBiggerNumberForCardId();\n  useEffect(() => {\n    setAddCardData({\n      [addCardData.deckId]: addCardData.deckId = studyDeck.id,\n      [addCardData.deckId]: addCardData.id = cardId\n    });\n    setAddCardData({ ...addCardData\n    });\n  }, []);\n  result = /*#__PURE__*/React.createElement(CardForm, {\n    studyDeck: studyDeck,\n    fnObj: fnObj,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }\n  });\n  return result;\n}\n\nexport default AddCard;","map":{"version":3,"sources":["/Users/Neo/Thinkful/qualified/Project_Flashcards_Qualified_1/src/Layout/AddCard.js"],"names":["React","useEffect","Link","CardForm","AddCard","studyDeck","fnObj","addCardData","setAddCardData","result","cardId","allCards","url","fetchJson","options","response","fetch","status","Error","statusText","json","error","name","getBiggerNumberForCardId","Promise","resolve","card","id","deckId"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAGA,SAASC,OAAT,CAAiB;AAACC,EAAAA,SAAD;AAAYC,EAAAA,KAAZ;AAAmBC,EAAAA,WAAnB;AAAgCC,EAAAA;AAAhC,CAAjB,EAAiE;AAC/D,MAAIC,MAAM,GAAC,KAAX;AACA,MAAIC,MAAM,GAAC,CAAX;AACA,MAAIC,QAAQ,GAAC,EAAb;AACA,QAAMC,GAAG,GAAI,6BAAb;;AAGA,iBAAeC,SAAf,CAAyBD,GAAzB,EAA8BE,OAA9B,EAAuC;AACrC,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAD,EAAME,OAAN,CAA5B;;AACA,UAAIC,QAAQ,CAACE,MAAT,GAAkB,GAAlB,IAAyBF,QAAQ,CAACE,MAAT,GAAkB,GAA/C,EAAoD;AAClD,cAAM,IAAIC,KAAJ,CAAW,GAAEH,QAAQ,CAACE,MAAO,MAAKF,QAAQ,CAACI,UAAW,EAAtD,CAAN;AACD;;AACD,aAAO,MAAMJ,QAAQ,CAACK,IAAT,EAAb;AACD,KAND,CAME,OAAOC,KAAP,EAAc;AACd,UAAIA,KAAK,CAACC,IAAN,KAAe,YAAnB,EAAiC;AAC/B,cAAMD,KAAN;AACD;AACF;AACF;;AACD,iBAAeE,wBAAf,GAAyC;AACvC,UAAMR,QAAQ,GAAGF,SAAS,CAACD,GAAD,CAA1B;AACAD,IAAAA,QAAQ,GAAG,MAAMa,OAAO,CAACC,OAAR,CAAgBV,QAAhB,CAAjB;;AACA,SAAI,IAAIW,IAAR,IAAgBf,QAAhB,EAAyB;AACvB,UAAGA,QAAQ,CAACe,IAAD,CAAR,CAAeC,EAAf,GAAkBjB,MAArB,EAA4B;AAACA,QAAAA,MAAM,GAACC,QAAQ,CAACe,IAAD,CAAR,CAAeC,EAAtB;AAAyB;;AAAA;AACvD;;AACDjB,IAAAA,MAAM,IAAE,CAAR;AACD;;AACDa,EAAAA,wBAAwB;AAOxBtB,EAAAA,SAAS,CAAC,MAAK;AACbO,IAAAA,cAAc,CAAC;AACb,OAACD,WAAW,CAACqB,MAAb,GAAsBrB,WAAW,CAACqB,MAAZ,GAAmBvB,SAAS,CAACsB,EADtC;AAEb,OAACpB,WAAW,CAACqB,MAAb,GAAsBrB,WAAW,CAACoB,EAAZ,GAAejB;AAFxB,KAAD,CAAd;AAIAF,IAAAA,cAAc,CAAC,EAAC,GAAGD;AAAJ,KAAD,CAAd;AACD,GANQ,EAMN,EANM,CAAT;AAQAE,EAAAA,MAAM,gBAAG,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAEJ,SAArB;AAAgC,IAAA,KAAK,EAAEC,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAT;AAEA,SAAOG,MAAP;AACD;;AAED,eAAeL,OAAf","sourcesContent":["import React, {useEffect} from \"react\"\nimport {Link} from \"react-router-dom\"\nimport CardForm from \"./CardForm\"\n\n\nfunction AddCard({studyDeck, fnObj, addCardData, setAddCardData}){\n  let result=\"JSX\";\n  let cardId=0;\n  let allCards=[]\n  const url = `http://localhost:5000/cards`;\n\n\n  async function fetchJson(url, options) {\n    try {\n      const response = await fetch(url, options);\n      if (response.status < 200 || response.status > 399) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n      return await response.json();\n    } catch (error) {\n      if (error.name !== \"AbortError\") {\n        throw error;\n      }\n    }\n  }\n  async function getBiggerNumberForCardId(){\n    const response = fetchJson(url);\n    allCards = await Promise.resolve(response);\n    for(let card in allCards){\n      if(allCards[card].id>cardId){cardId=allCards[card].id};\n    }\n    cardId+=1;\n  }\n  getBiggerNumberForCardId()\n\n\n\n  \n\n\n  useEffect(()=> { \n    setAddCardData({\n      [addCardData.deckId]: addCardData.deckId=studyDeck.id,\n      [addCardData.deckId]: addCardData.id=cardId,\n    }); \n    setAddCardData({...addCardData})\n  }, [])\n  \n  result = <CardForm studyDeck={studyDeck} fnObj={fnObj}/>\n\n  return result\n}\n\nexport default AddCard;"]},"metadata":{},"sourceType":"module"}