{"ast":null,"code":"var _jsxFileName = \"/Users/Neo/Thinkful/qualified/Project_Flashcards_Qualified_1/src/Layout/index.js\";\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport { listDecks, deleteDeck, updateDeck, createCard, createDeck } from \"../utils/api/index\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport CreateDeckBtn from \"./home/CreateDeckBtn\";\nimport Decks from \"./home/Decks\";\nimport Study from \"./home/Study\";\nimport BreadCrumb from \"./BreadCrumb\";\nimport AddCard from \"./AddCard\";\nimport CreateDeck from \"./CreateDeck\";\nimport Deck from \"./Deck\";\nimport EditCard from \"./EditCard\";\nimport EditDeck from \"./EditDeck\";\n\nfunction Layout() {\n  const history = useHistory();\n  const [deck, setDeck] = useState([]);\n  const [studyDeck, setStudyDeck] = useState(undefined);\n  const [sideToDisplay, setDisplay] = useState(undefined);\n  let [counter, setCounter] = useState(0);\n  let [isNextBtnOn, setNextBtn] = useState(false); //deleteCard(6)\n\n  const initialCreateDeckFormData = {\n    id: 0,\n    name: \"\",\n    description: \"\"\n  };\n  const initialAddCardFormData = {\n    front: \"\",\n    back: \"\",\n    deckId: 0,\n    id: 0\n  };\n  let [createDeckData, setCreateDeckData] = useState({ ...initialCreateDeckFormData\n  });\n  let [addCardData, setAddCardData] = useState({ ...initialAddCardFormData\n  }); // console.log(\"ADD CARD DATA\", addCardData)\n\n  const fnObj = {\n    deleteDeckHandler: event => {\n      if (window.confirm(\"Are you sure you want to delete this deck?\")) {\n        deleteDeck(event.target.id);\n        fnObj.deckFetcher();\n        history.push(\"/\");\n      }\n    },\n    deckFetcher: async () => {\n      const deckSet = await Promise.resolve(listDecks());\n      return setDeck(deckSet);\n    },\n    nextHandler: () => {\n      if (counter < studyDeck.cards.length - 1) {\n        setCounter(counter += 1);\n        setNextBtn(false);\n        setDisplay(studyDeck.cards[counter].front);\n      } else {\n        if (window.confirm(\"Press OK to restart deck and CANCEL to return home\")) {\n          setNextBtn(false);\n          setDisplay(studyDeck.cards[counter].front);\n        } else {\n          history.push(\"/\");\n          setNextBtn(false);\n        }\n\n        setCounter(0);\n      }\n    },\n    flipHandler: () => {\n      if (sideToDisplay === studyDeck.cards[counter].front) {\n        setDisplay(studyDeck.cards[counter].back);\n        setNextBtn(true);\n        return;\n      }\n\n      if (sideToDisplay === studyDeck.cards[counter].back) {\n        setDisplay(studyDeck.cards[counter].front);\n        setNextBtn(false);\n        return;\n      }\n    },\n    studyDeckSetter: id => {\n      const item = deck.find(item => id == item.id);\n      setStudyDeck(item); //console.log('STUDY DECK', studyDeck);\n    },\n    addCardFormChangeHandler: ({\n      target\n    }) => {\n      setAddCardData({ ...addCardData,\n        [target.name]: target.value\n      });\n      console.log(addCardData);\n    },\n    addCardSubmitHandler: async event => {\n      event.preventDefault();\n      await createCard(studyDeck.id, addCardData);\n      setAddCardData({ ...initialAddCardFormData\n      });\n    },\n    createDeckChangeHandler: ({\n      target\n    }) => {\n      setCreateDeckData({ ...createDeckData,\n        [target.name]: target.value\n      });\n      console.log(createDeckData);\n    },\n    createDeckSubmitHandler: async event => {\n      event.preventDefault();\n      await createDeck(createDeckData);\n      setCreateDeckData({ ...initialCreateDeckFormData\n      });\n      history.push(\"/\");\n    },\n    editCardFormChangeHandler: ({\n      target\n    }) => {\n      setAddCardData({ ...addCardData,\n        [target.name]: target.value\n      });\n      console.log(addCardData);\n    }\n  };\n  useEffect(() => {\n    fnObj.studyDeckSetter(deck[0]);\n  }, []);\n  useEffect(() => {\n    fnObj.deckFetcher();\n\n    if (studyDeck !== undefined) {\n      setDisplay(studyDeck.cards[counter].front);\n    }\n  }, [studyDeck, counter]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CreateDeckBtn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Decks, {\n    deck: deck,\n    fnObj: fnObj,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/decks/:deckId/study\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BreadCrumb, {\n    studyDeck: studyDeck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Study, {\n    fnObj: fnObj,\n    studyDeck: studyDeck,\n    sideToDisplay: sideToDisplay,\n    counter: counter,\n    isNextBtnOn: isNextBtnOn,\n    setCounter: setCounter,\n    setNextBtn: setNextBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/decks/:deckId/cards/new\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BreadCrumb, {\n    studyDeck: studyDeck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(AddCard, {\n    studyDeck: studyDeck,\n    fnObj: fnObj,\n    addCardData: addCardData,\n    setAddCardData: setAddCardData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/decks/new\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BreadCrumb, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CreateDeck, {\n    fnObj: fnObj,\n    createDeckData: createDeckData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/decks/:deckId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BreadCrumb, {\n    studyDeck: studyDeck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Deck, {\n    studyDeck: studyDeck,\n    fnObj: fnObj,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/decks/:deckId/cards/:cardId/edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(EditCard, {\n    studyDeck: studyDeck,\n    fnObj: fnObj,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/decks/:deckId/edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BreadCrumb, {\n    studyDeck: studyDeck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(EditDeck, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NotFound, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default Layout;","map":{"version":3,"sources":["/Users/Neo/Thinkful/qualified/Project_Flashcards_Qualified_1/src/Layout/index.js"],"names":["React","useState","useEffect","Fragment","Switch","Route","useHistory","listDecks","deleteDeck","updateDeck","createCard","createDeck","Header","NotFound","CreateDeckBtn","Decks","Study","BreadCrumb","AddCard","CreateDeck","Deck","EditCard","EditDeck","Layout","history","deck","setDeck","studyDeck","setStudyDeck","undefined","sideToDisplay","setDisplay","counter","setCounter","isNextBtnOn","setNextBtn","initialCreateDeckFormData","id","name","description","initialAddCardFormData","front","back","deckId","createDeckData","setCreateDeckData","addCardData","setAddCardData","fnObj","deleteDeckHandler","event","window","confirm","target","deckFetcher","push","deckSet","Promise","resolve","nextHandler","cards","length","flipHandler","studyDeckSetter","item","find","addCardFormChangeHandler","value","console","log","addCardSubmitHandler","preventDefault","createDeckChangeHandler","createDeckSubmitHandler","editCardFormChangeHandler"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, Fragment} from \"react\";\nimport {Switch, Route, useHistory} from \"react-router-dom\";\nimport {listDecks, deleteDeck, updateDeck, createCard, createDeck} from \"../utils/api/index\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport CreateDeckBtn from \"./home/CreateDeckBtn\";\nimport Decks from \"./home/Decks\";\nimport Study from \"./home/Study\";\nimport BreadCrumb from \"./BreadCrumb\";\nimport AddCard from \"./AddCard\";\nimport CreateDeck from \"./CreateDeck\";\nimport Deck from \"./Deck\";\nimport EditCard from \"./EditCard\";\nimport EditDeck from \"./EditDeck\";\n\n\n\n\nfunction Layout() {\n  const history=useHistory();\n\n  const [deck, setDeck] = useState([]);\n  const [studyDeck, setStudyDeck] = useState(undefined);\n  const [sideToDisplay, setDisplay] = useState(undefined);\n  let [counter, setCounter] = useState(0);\n  let [isNextBtnOn, setNextBtn] = useState(false);\n  //deleteCard(6)\n\n  const initialCreateDeckFormData={\n    id: 0,\n    name: \"\",\n    description: \"\"\n  }\n\n  const initialAddCardFormData={\n    front: \"\",\n    back: \"\",\n    deckId: 0,\n    id: 0\n  }\n\n  let [createDeckData, setCreateDeckData] = useState({...initialCreateDeckFormData})\n\n  let [addCardData, setAddCardData] = useState({...initialAddCardFormData})\n  // console.log(\"ADD CARD DATA\", addCardData)\n\n  \n  const fnObj={\n    deleteDeckHandler: (event) => {\n      if(window.confirm(\"Are you sure you want to delete this deck?\")){\n        deleteDeck(event.target.id);\n        fnObj.deckFetcher();\n        history.push(\"/\")\n      }\n    },\n    deckFetcher: async () =>{\n      const deckSet = await Promise.resolve(listDecks());\n      return setDeck(deckSet);\n    },\n    nextHandler: () => {\n      if(counter<studyDeck.cards.length-1){\n        setCounter(counter+=1);\n        setNextBtn(false);\n        setDisplay(studyDeck.cards[counter].front);\n      }\n      else{\n        if(window.confirm(\"Press OK to restart deck and CANCEL to return home\")){\n          setNextBtn(false);\n          setDisplay(studyDeck.cards[counter].front);\n        }\n        else{\n          history.push(\"/\");\n          setNextBtn(false);\n        }\n        setCounter(0);\n      }\n    },\n    flipHandler: () => {\n      if(sideToDisplay===studyDeck.cards[counter].front){\n        setDisplay(studyDeck.cards[counter].back);\n        setNextBtn(true);\n        return   \n      }\n      if(sideToDisplay===studyDeck.cards[counter].back){\n        setDisplay(studyDeck.cards[counter].front);\n        setNextBtn(false);\n        return\n      }\n    },\n    studyDeckSetter: (id) => {\n      const item = deck.find((item)=>id==item.id);\n      setStudyDeck(item);\n      //console.log('STUDY DECK', studyDeck);\n    },\n    addCardFormChangeHandler: ({target}) => {\n      setAddCardData({\n        ...addCardData, \n        [target.name]: target.value,\n      })\n      console.log(addCardData)\n    },\n    addCardSubmitHandler: async (event) => {\n      event.preventDefault();\n      await createCard(studyDeck.id, addCardData);\n      setAddCardData({...initialAddCardFormData});\n    },\n    createDeckChangeHandler: ({target}) => {\n      setCreateDeckData({\n        ...createDeckData,\n        [target.name]: target.value\n      })\n      console.log(createDeckData)\n    },\n    createDeckSubmitHandler: async (event) => {\n      event.preventDefault();\n      await createDeck(createDeckData);\n      setCreateDeckData({...initialCreateDeckFormData});\n      history.push(\"/\");\n    },\n    editCardFormChangeHandler: ({target}) => {\n      setAddCardData({\n        ...addCardData, \n        [target.name]: target.value,\n      })\n      console.log(addCardData)\n    },\n  }\n  useEffect(()=>{\n    fnObj.studyDeckSetter(deck[0])\n  }, [])\n\n  useEffect(()=>{\n   fnObj.deckFetcher();\n\n   if(studyDeck!==undefined){\n    setDisplay(studyDeck.cards[counter].front);\n   }\n  }, [studyDeck, counter])\n  return (\n    <Fragment>\n      <Header />\n      <div className=\"container\">\n        <Switch>\n          <Route exact={true} path={\"/\"}>\n            <CreateDeckBtn />\n            <Decks \n              deck={deck} \n              fnObj={fnObj} \n            />\n          </Route>\n          <Route exact={true} path={\"/decks/:deckId/study\"}>\n            <BreadCrumb \n              studyDeck={studyDeck}\n            />\n            <Study \n              fnObj={fnObj} \n              studyDeck={studyDeck}\n              sideToDisplay={sideToDisplay}\n              counter={counter}\n              isNextBtnOn={isNextBtnOn}\n              setCounter={setCounter}\n              setNextBtn={setNextBtn}\n            />\n          </Route>\n          <Route path={\"/decks/:deckId/cards/new\"}>\n            <BreadCrumb \n              studyDeck={studyDeck}\n            />\n            <AddCard \n              studyDeck={studyDeck}\n              fnObj={fnObj}\n              addCardData={addCardData}\n              setAddCardData={setAddCardData}\n            />\n          </Route>\n          <Route exact={true} path={\"/decks/new\"}>\n            <BreadCrumb />\n            <CreateDeck \n              fnObj={fnObj}\n              createDeckData={createDeckData}\n            \n            />\n          </Route>\n          <Route exact={true} path={\"/decks/:deckId\"}>\n            <BreadCrumb \n              studyDeck={studyDeck}\n            />\n            <Deck \n              studyDeck={studyDeck}\n              fnObj={fnObj}\n            />\n          </Route>\n          <Route path={\"/decks/:deckId/cards/:cardId/edit\"}>\n            <EditCard \n              studyDeck={studyDeck}\n              fnObj={fnObj}\n            />\n          </Route>\n          <Route path={\"/decks/:deckId/edit\"}>\n            <BreadCrumb studyDeck={studyDeck} />\n            <EditDeck />\n          </Route>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch> \n      </div>\n    </Fragment>\n  );\n}\n\nexport default Layout;"]},"metadata":{},"sourceType":"module"}