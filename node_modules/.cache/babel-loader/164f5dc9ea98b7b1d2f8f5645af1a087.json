{"ast":null,"code":"var _jsxFileName = \"/Users/Neo/Thinkful/qualified/Project_Flashcards_Qualified_1/src/Layout/home/Study.js\";\nimport React from \"react\";\nimport { useParams, useState } from \"react-router-dom\";\n\nfunction Study({\n  deck\n}) {\n  let front;\n  let back;\n  let side = \"front\";\n  let counter = 0;\n  const deckId = useParams(); //console.log(\"DECK ID\", deckId)\n\n  console.log('DECK', deck);\n  const topic = deck.find(item => deckId.deckId == item.id); //double equals coerces string to num\n\n  console.log('TOPIC', topic);\n\n  const flipHandler = () => {\n    if (side === front) {\n      side = back;\n    }\n\n    ;\n\n    if (side === back) {\n      side = front;\n    }\n  }; //console.log(deckId.deckId)\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"Study: \", topic.name, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, \"Card \", \" of \", topic.cards.length)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, topic.cards[counter].side), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: flipHandler,\n    className: \"m-2 btn btn-secondary col-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Flip\")));\n}\n\nexport default Study;","map":{"version":3,"sources":["/Users/Neo/Thinkful/qualified/Project_Flashcards_Qualified_1/src/Layout/home/Study.js"],"names":["React","useParams","useState","Study","deck","front","back","side","counter","deckId","console","log","topic","find","item","id","flipHandler","name","cards","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,kBAAlC;;AAEA,SAASC,KAAT,CAAe;AAACC,EAAAA;AAAD,CAAf,EAAsB;AACpB,MAAIC,KAAJ;AACA,MAAIC,IAAJ;AACA,MAAIC,IAAI,GAAG,OAAX;AACA,MAAIC,OAAO,GAAG,CAAd;AACA,QAAMC,MAAM,GAAGR,SAAS,EAAxB,CALoB,CAMpB;;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBP,IAApB;AACA,QAAMQ,KAAK,GAAGR,IAAI,CAACS,IAAL,CAAWC,IAAD,IAAQL,MAAM,CAACA,MAAP,IAAeK,IAAI,CAACC,EAAtC,CAAd,CARoB,CAQoC;;AACxDL,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,KAArB;;AAEA,QAAMI,WAAW,GAAG,MAAK;AACvB,QAAGT,IAAI,KAAGF,KAAV,EAAgB;AAACE,MAAAA,IAAI,GAACD,IAAL;AAAU;;AAAA;;AAC3B,QAAGC,IAAI,KAAGD,IAAV,EAAe;AAACC,MAAAA,IAAI,GAACF,KAAL;AAAW;AAC5B,GAHD,CAXoB,CAgBpB;;;AACA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYO,KAAK,CAACK,IAAlB,MADF,eAEE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAgBL,KAAK,CAACM,KAAN,CAAYC,MAA5B,CADF,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,KAAK,CAACM,KAAN,CAAYV,OAAZ,EAAqBD,IADxB,CAJF,eAOE;AAAQ,IAAA,OAAO,EAAES,WAAjB;AAA8B,IAAA,SAAS,EAAC,6BAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,CAFF,CADF;AAcD;;AAID,eAAeb,KAAf","sourcesContent":["import React from \"react\";\nimport {useParams, useState} from \"react-router-dom\"\n\nfunction Study({deck}){\n  let front\n  let back\n  let side = \"front\"\n  let counter = 0;\n  const deckId = useParams();\n  //console.log(\"DECK ID\", deckId)\n  console.log('DECK', deck)\n  const topic = deck.find((item)=>deckId.deckId==item.id) //double equals coerces string to num\n  console.log('TOPIC', topic)\n\n  const flipHandler = () =>{\n    if(side===front){side=back};\n    if(side===back){side=front}\n  }\n  \n  //console.log(deckId.deckId)\n  return(\n    <>\n      <h1>Study: {topic.name} </h1>\n      <div className=\"card\">\n        <div className=\"card-title\">\n          <h4>Card {} of {topic.cards.length}</h4>\n        </div>\n        <div className=\"card-body\">\n          {topic.cards[counter].side}\n        </div>\n        <button onClick={flipHandler} className=\"m-2 btn btn-secondary col-1\">Flip</button>\n      </div>\n    </>\n  )\n}\n\n\n\nexport default Study;"]},"metadata":{},"sourceType":"module"}