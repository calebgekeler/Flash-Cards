{"ast":null,"code":"var _jsxFileName = \"/Users/Neo/Thinkful/qualified/Project_Flashcards_Qualified_1/src/Layout/EditCard.js\";\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport CardForm from \"./CardForm\";\nimport BreadCrumb from \"./BreadCrumb\";\n\nfunction EditCard({\n  fnObj,\n  studyDeck\n}) {\n  const {\n    cardId\n  } = useParams();\n  console.log(\"CARD ID\", cardId);\n  let allCards = [];\n  let [card, setCard] = useState({});\n  const url = `http://localhost:5000/cards`;\n\n  async function fetchJson(url, options) {\n    try {\n      const response = await fetch(url, options);\n\n      if (response.status < 200 || response.status > 399) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      if (error.name !== \"AbortError\") {\n        throw error;\n      }\n    }\n  }\n\n  async function getCard() {\n    let response = await fetchJson(url);\n    allCards = await Promise.resolve(response);\n    console.log(allCards);\n\n    for (let item in allCards) {\n      console.log(allCards[item].id);\n\n      if (allCards[item].id == cardId) {\n        setCard(allCards[item].id);\n      }\n    }\n\n    console.log('CARD', card);\n  }\n\n  getCard();\n  const result = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BreadCrumb, {\n    studyDeck: studyDeck,\n    cardId: cardId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, studyDeck.name, \": Edit Card\")), /*#__PURE__*/React.createElement(CardForm, {\n    studyDeck: studyDeck,\n    fnObj: fnObj,\n    card: card,\n    cardId: cardId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  })));\n  return result;\n}\n\nexport default EditCard;","map":{"version":3,"sources":["/Users/Neo/Thinkful/qualified/Project_Flashcards_Qualified_1/src/Layout/EditCard.js"],"names":["React","useState","useParams","CardForm","BreadCrumb","EditCard","fnObj","studyDeck","cardId","console","log","allCards","card","setCard","url","fetchJson","options","response","fetch","status","Error","statusText","json","error","name","getCard","Promise","resolve","item","id","result"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,SAASC,QAAT,CAAkB;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAlB,EAAqC;AACnC,QAAK;AAACC,IAAAA;AAAD,MAASN,SAAS,EAAvB;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,MAAvB;AACA,MAAIG,QAAQ,GAAC,EAAb;AACA,MAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAA9B;AAEA,QAAMa,GAAG,GAAI,6BAAb;;AAEA,iBAAeC,SAAf,CAAyBD,GAAzB,EAA8BE,OAA9B,EAAuC;AACrC,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAD,EAAME,OAAN,CAA5B;;AACA,UAAIC,QAAQ,CAACE,MAAT,GAAkB,GAAlB,IAAyBF,QAAQ,CAACE,MAAT,GAAkB,GAA/C,EAAoD;AAClD,cAAM,IAAIC,KAAJ,CAAW,GAAEH,QAAQ,CAACE,MAAO,MAAKF,QAAQ,CAACI,UAAW,EAAtD,CAAN;AACD;;AACD,aAAO,MAAMJ,QAAQ,CAACK,IAAT,EAAb;AACD,KAND,CAME,OAAOC,KAAP,EAAc;AACd,UAAIA,KAAK,CAACC,IAAN,KAAe,YAAnB,EAAiC;AAC/B,cAAMD,KAAN;AACD;AACF;AACF;;AACD,iBAAeE,OAAf,GAAwB;AACtB,QAAIR,QAAQ,GAAG,MAAMF,SAAS,CAACD,GAAD,CAA9B;AACAH,IAAAA,QAAQ,GAAE,MAAMe,OAAO,CAACC,OAAR,CAAgBV,QAAhB,CAAhB;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;;AACA,SAAI,IAAIiB,IAAR,IAAgBjB,QAAhB,EAAyB;AACvBF,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACiB,IAAD,CAAR,CAAeC,EAA3B;;AACA,UAAGlB,QAAQ,CAACiB,IAAD,CAAR,CAAeC,EAAf,IAAmBrB,MAAtB,EAA6B;AAACK,QAAAA,OAAO,CAACF,QAAQ,CAACiB,IAAD,CAAR,CAAeC,EAAhB,CAAP;AAA2B;AAC1D;;AACDpB,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBE,IAApB;AACD;;AACDa,EAAAA,OAAO;AAEP,QAAMK,MAAM,gBACV,uDACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEvB,SAAvB;AAAkC,IAAA,MAAM,EAAEC,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,SAAS,CAACiB,IAAf,gBADJ,CADF,eAIE,oBAAC,QAAD;AACE,IAAA,SAAS,EAAEjB,SADb;AAEE,IAAA,KAAK,EAAED,KAFT;AAGE,IAAA,IAAI,EAAEM,IAHR;AAIE,IAAA,MAAM,EAAEJ,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAFF,CADF;AAgBA,SAAOsB,MAAP;AACD;;AAED,eAAezB,QAAf","sourcesContent":["import React, {useState} from \"react\";\nimport {useParams} from \"react-router-dom\"\nimport CardForm from \"./CardForm\";\nimport BreadCrumb from \"./BreadCrumb\"\n\nfunction EditCard({fnObj, studyDeck}){\n  const{cardId}=useParams()\n  console.log(\"CARD ID\", cardId)\n  let allCards=[]\n  let [card, setCard] = useState({})\n\n  const url = `http://localhost:5000/cards`;\n\n  async function fetchJson(url, options) {\n    try {\n      const response = await fetch(url, options);\n      if (response.status < 200 || response.status > 399) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n      return await response.json();\n    } catch (error) {\n      if (error.name !== \"AbortError\") {\n        throw error;\n      }\n    }\n  }\n  async function getCard(){\n    let response = await fetchJson(url)\n    allCards= await Promise.resolve(response)\n    console.log(allCards)\n    for(let item in allCards){\n      console.log(allCards[item].id)\n      if(allCards[item].id==cardId){setCard(allCards[item].id)}\n    }\n    console.log('CARD', card)\n  }\n  getCard();\n  \n  const result=(\n    <>\n      <BreadCrumb studyDeck={studyDeck} cardId={cardId}/>\n      <div className=\"container\">\n        <div className=\"row\">\n            <h3>{studyDeck.name}: Edit Card</h3>\n          </div>\n        <CardForm \n          studyDeck={studyDeck} \n          fnObj={fnObj} \n          card={card}\n          cardId={cardId}\n        />\n      </div>\n    </>\n  )\n  return result;\n}\n\nexport default EditCard;"]},"metadata":{},"sourceType":"module"}