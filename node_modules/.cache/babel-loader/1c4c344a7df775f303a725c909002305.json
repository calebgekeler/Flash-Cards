{"ast":null,"code":"var _jsxFileName = \"/Users/Neo/Thinkful/qualified/Project_Flashcards_Qualified_1/src/Layout/EditCard.js\";\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport CardForm from \"./CardForm\";\nimport BreadCrumb from \"./BreadCrumb\";\n\nfunction EditCard({\n  fnObj,\n  studyDeck\n}) {\n  const {\n    cardId\n  } = useParams();\n  console.log(\"CARD ID\", cardId);\n  let allCards = [];\n  let card = {};\n  const url = `http://localhost:5000/cards`;\n\n  async function fetchJson(url, options) {\n    try {\n      const response = await fetch(url, options);\n\n      if (response.status < 200 || response.status > 399) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      if (error.name !== \"AbortError\") {\n        throw error;\n      }\n    }\n  }\n\n  async function getCardsArray() {\n    let response = await fetchJson();\n    allCards = Promise.resolve(response);\n    console.log(allCards);\n\n    for (let item in allCards) {\n      if (allCards[item].id === cardId) {\n        card = allCards[item].id;\n      }\n    }\n\n    console.log('CARD', card);\n  }\n\n  getCardsArray();\n  const result = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BreadCrumb, {\n    studyDeck: studyDeck,\n    cardId: cardId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, studyDeck.name, \": Edit Card\")), /*#__PURE__*/React.createElement(CardForm, {\n    studyDeck: studyDeck,\n    fnObj: fnObj,\n    cardId: cardId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })));\n  return result;\n}\n\nexport default EditCard;","map":{"version":3,"sources":["/Users/Neo/Thinkful/qualified/Project_Flashcards_Qualified_1/src/Layout/EditCard.js"],"names":["React","useParams","CardForm","BreadCrumb","EditCard","fnObj","studyDeck","cardId","console","log","allCards","card","url","fetchJson","options","response","fetch","status","Error","statusText","json","error","name","getCardsArray","Promise","resolve","item","id","result"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,SAASC,QAAT,CAAkB;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAlB,EAAqC;AACnC,QAAK;AAACC,IAAAA;AAAD,MAASN,SAAS,EAAvB;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,MAAvB;AACA,MAAIG,QAAQ,GAAC,EAAb;AACA,MAAIC,IAAI,GAAC,EAAT;AAEA,QAAMC,GAAG,GAAI,6BAAb;;AAEA,iBAAeC,SAAf,CAAyBD,GAAzB,EAA8BE,OAA9B,EAAuC;AACrC,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAD,EAAME,OAAN,CAA5B;;AACA,UAAIC,QAAQ,CAACE,MAAT,GAAkB,GAAlB,IAAyBF,QAAQ,CAACE,MAAT,GAAkB,GAA/C,EAAoD;AAClD,cAAM,IAAIC,KAAJ,CAAW,GAAEH,QAAQ,CAACE,MAAO,MAAKF,QAAQ,CAACI,UAAW,EAAtD,CAAN;AACD;;AACD,aAAO,MAAMJ,QAAQ,CAACK,IAAT,EAAb;AACD,KAND,CAME,OAAOC,KAAP,EAAc;AACd,UAAIA,KAAK,CAACC,IAAN,KAAe,YAAnB,EAAiC;AAC/B,cAAMD,KAAN;AACD;AACF;AACF;;AACD,iBAAeE,aAAf,GAA8B;AAC5B,QAAIR,QAAQ,GAAG,MAAMF,SAAS,EAA9B;AACAH,IAAAA,QAAQ,GAACc,OAAO,CAACC,OAAR,CAAgBV,QAAhB,CAAT;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;;AACA,SAAI,IAAIgB,IAAR,IAAgBhB,QAAhB,EAAyB;AACvB,UAAGA,QAAQ,CAACgB,IAAD,CAAR,CAAeC,EAAf,KAAoBpB,MAAvB,EAA8B;AAACI,QAAAA,IAAI,GAACD,QAAQ,CAACgB,IAAD,CAAR,CAAeC,EAApB;AAAuB;AACvD;;AACDnB,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBE,IAApB;AACD;;AACDY,EAAAA,aAAa;AAEb,QAAMK,MAAM,gBACV,uDACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEtB,SAAvB;AAAkC,IAAA,MAAM,EAAEC,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,SAAS,CAACgB,IAAf,gBADJ,CADF,eAIE,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAEhB,SAArB;AAAgC,IAAA,KAAK,EAAED,KAAvC;AAA8C,IAAA,MAAM,EAAEE,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAFF,CADF;AAWA,SAAOqB,MAAP;AACD;;AAED,eAAexB,QAAf","sourcesContent":["import React from \"react\";\nimport {useParams} from \"react-router-dom\"\nimport CardForm from \"./CardForm\";\nimport BreadCrumb from \"./BreadCrumb\"\n\nfunction EditCard({fnObj, studyDeck}){\n  const{cardId}=useParams()\n  console.log(\"CARD ID\", cardId)\n  let allCards=[]\n  let card={};\n\n  const url = `http://localhost:5000/cards`;\n\n  async function fetchJson(url, options) {\n    try {\n      const response = await fetch(url, options);\n      if (response.status < 200 || response.status > 399) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n      return await response.json();\n    } catch (error) {\n      if (error.name !== \"AbortError\") {\n        throw error;\n      }\n    }\n  }\n  async function getCardsArray(){\n    let response = await fetchJson()\n    allCards=Promise.resolve(response)\n    console.log(allCards)\n    for(let item in allCards){\n      if(allCards[item].id===cardId){card=allCards[item].id}\n    }\n    console.log('CARD', card)\n  }\n  getCardsArray()\n\n  const result=(\n    <>\n      <BreadCrumb studyDeck={studyDeck} cardId={cardId}/>\n      <div className=\"container\">\n        <div className=\"row\">\n            <h3>{studyDeck.name}: Edit Card</h3>\n          </div>\n        <CardForm studyDeck={studyDeck} fnObj={fnObj} cardId={cardId}/>\n      </div>\n    </>\n  )\n  return result;\n}\n\nexport default EditCard;"]},"metadata":{},"sourceType":"module"}