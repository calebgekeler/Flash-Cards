{"ast":null,"code":"var _jsxFileName = \"/Users/Neo/Thinkful/qualified/Project_Flashcards_Qualified_1/src/Layout/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport { listDecks, deleteDeck, updateCard, updateDeck, createCard, deleteCard } from \"../utils/api/index\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport CreateDeckBtn from './home/CreateDeckBtn';\nimport Deck from \"./home/Deck\";\nimport Study from \"./home/Study\";\nimport BreadCrumb from \"./BreadCrumb\";\nimport AddCard from \"./AddCard\";\n\nfunction Layout() {\n  const history = useHistory();\n  const [deck, setDeck] = useState([]);\n  const [studyDeck, setStudyDeck] = useState(undefined);\n  const [sideToDisplay, setDisplay] = useState(undefined);\n  let [counter, setCounter] = useState(0);\n  let [isNextBtnOn, setNextBtn] = useState(false); //deleteCard(6)\n\n  const initialAddCardFormData = {\n    front: \"\",\n    back: \"\",\n    deckId: 0,\n    id: 0\n  };\n  let [addCardData, setAddCardData] = useState({ ...initialAddCardFormData\n  });\n  console.log(\"ADD CARD DATA\", addCardData);\n  const fnObj = {\n    deleteHandler: event => {\n      if (window.confirm(\"Are you sure you want to delete this deck?\")) {\n        deleteDeck(event.target.id);\n        fnObj.deckFetcher();\n      }\n    },\n    deckFetcher: async () => {\n      const deckSet = await Promise.resolve(listDecks());\n      return setDeck(deckSet);\n    },\n    nextHandler: () => {\n      if (counter < studyDeck.cards.length - 1) {\n        setCounter(counter += 1);\n        setNextBtn(false);\n        setDisplay(studyDeck.cards[counter].front);\n      } else {\n        if (window.confirm(\"Press OK to restart deck and CANCEL to return home\")) {\n          setNextBtn(false);\n          setDisplay(studyDeck.cards[counter].front);\n        } else {\n          history.push(\"/\");\n          setNextBtn(false);\n        }\n\n        setCounter(0);\n      }\n    },\n    flipHandler: () => {\n      if (sideToDisplay === studyDeck.cards[counter].front) {\n        setDisplay(studyDeck.cards[counter].back);\n        setNextBtn(true);\n        return;\n      }\n\n      if (sideToDisplay === studyDeck.cards[counter].back) {\n        setDisplay(studyDeck.cards[counter].front);\n        setNextBtn(false);\n        return;\n      }\n    },\n    studyDeckSetter: id => {\n      const item = deck.find(item => id == item.id);\n      setStudyDeck(item); //console.log('STUDY DECK', studyDeck);\n    },\n    addCardFormChangeHandler: ({\n      target\n    }) => {\n      setAddCardData({ ...addCardData,\n        [target.name]: target.value\n      });\n      console.log(addCardData);\n    },\n    addCardSubmitHandler: async event => {\n      event.preventDefault();\n      await createCard(studyDeck.id, addCardData);\n      setAddCardData({ ...initialAddCardFormData\n      });\n    }\n  };\n  useEffect(() => {\n    fnObj.deckFetcher();\n\n    if (studyDeck !== undefined) {\n      setDisplay(studyDeck.cards[counter].front);\n    }\n  }, [studyDeck, counter]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CreateDeckBtn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Deck, {\n    deck: deck,\n    fnObj: fnObj,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/decks/:deckId/study\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BreadCrumb, {\n    studyDeck: studyDeck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Study, {\n    fnObj: fnObj,\n    studyDeck: studyDeck,\n    sideToDisplay: sideToDisplay,\n    counter: counter,\n    isNextBtnOn: isNextBtnOn,\n    setCounter: setCounter,\n    setNextBtn: setNextBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/decks/:deckId/cards/new\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BreadCrumb, {\n    studyDeck: studyDeck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(AddCard, {\n    studyDeck: studyDeck,\n    fnObj: fnObj,\n    addCardData: addCardData,\n    setAddCardData: setAddCardData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NotFound, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default Layout;","map":{"version":3,"sources":["/Users/Neo/Thinkful/qualified/Project_Flashcards_Qualified_1/src/Layout/index.js"],"names":["React","useState","useEffect","Switch","Route","useHistory","listDecks","deleteDeck","updateCard","updateDeck","createCard","deleteCard","Header","NotFound","CreateDeckBtn","Deck","Study","BreadCrumb","AddCard","Layout","history","deck","setDeck","studyDeck","setStudyDeck","undefined","sideToDisplay","setDisplay","counter","setCounter","isNextBtnOn","setNextBtn","initialAddCardFormData","front","back","deckId","id","addCardData","setAddCardData","console","log","fnObj","deleteHandler","event","window","confirm","target","deckFetcher","deckSet","Promise","resolve","nextHandler","cards","length","push","flipHandler","studyDeckSetter","item","find","addCardFormChangeHandler","name","value","addCardSubmitHandler","preventDefault"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {Switch, Route, useHistory} from \"react-router-dom\";\nimport {listDecks, deleteDeck, updateCard, updateDeck, createCard, deleteCard} from \"../utils/api/index\"\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport CreateDeckBtn from './home/CreateDeckBtn'\nimport Deck from \"./home/Deck\"\nimport Study from \"./home/Study\"\nimport BreadCrumb from \"./BreadCrumb\";\nimport AddCard from \"./AddCard\"\n\n\n\n\nfunction Layout() {\n  const history=useHistory();\n\n  const [deck, setDeck] = useState([]);\n  const [studyDeck, setStudyDeck] = useState(undefined);\n  const [sideToDisplay, setDisplay] = useState(undefined);\n  let [counter, setCounter] = useState(0);\n  let [isNextBtnOn, setNextBtn] = useState(false);\n  //deleteCard(6)\n\n  const initialAddCardFormData={\n    front: \"\",\n    back: \"\",\n    deckId: 0,\n    id: 0\n  }\n\n  let [addCardData, setAddCardData] = useState({...initialAddCardFormData})\n  console.log(\"ADD CARD DATA\", addCardData)\n  \n  const fnObj={\n    deleteHandler: (event) => {\n      if(window.confirm(\"Are you sure you want to delete this deck?\")){\n        deleteDeck(event.target.id);\n        fnObj.deckFetcher();\n      }\n    },\n    deckFetcher: async () =>{\n      const deckSet = await Promise.resolve(listDecks());\n      return setDeck(deckSet);\n    },\n    nextHandler: () => {\n      if(counter<studyDeck.cards.length-1){\n        setCounter(counter+=1);\n        setNextBtn(false);\n        setDisplay(studyDeck.cards[counter].front);\n      }\n      else{\n        if(window.confirm(\"Press OK to restart deck and CANCEL to return home\")){\n          setNextBtn(false);\n          setDisplay(studyDeck.cards[counter].front);\n        }\n        else{\n          history.push(\"/\");\n          setNextBtn(false);\n        }\n        setCounter(0);\n      }\n    },\n    flipHandler: () => {\n      if(sideToDisplay===studyDeck.cards[counter].front){\n        setDisplay(studyDeck.cards[counter].back);\n        setNextBtn(true);\n        return   \n      }\n      if(sideToDisplay===studyDeck.cards[counter].back){\n        setDisplay(studyDeck.cards[counter].front);\n        setNextBtn(false);\n        return\n      }\n    },\n    studyDeckSetter: (id) => {\n      const item = deck.find((item)=>id==item.id);\n      setStudyDeck(item);\n      //console.log('STUDY DECK', studyDeck);\n    },\n    addCardFormChangeHandler: ({target}) => {\n      setAddCardData({\n        ...addCardData, \n        [target.name]: target.value,\n      })\n      console.log(addCardData)\n    },\n    addCardSubmitHandler: async (event) => {\n      event.preventDefault();\n      await createCard(studyDeck.id, addCardData);\n      setAddCardData({...initialAddCardFormData});\n    },\n  }\n\n\n  useEffect(()=>{\n   fnObj.deckFetcher();\n\n   if(studyDeck!==undefined){\n    setDisplay(studyDeck.cards[counter].front);\n   }\n  }, [studyDeck, counter])\n  return (\n    <>\n      <Header />\n      <div>\n        <Switch>\n          <Route exact={true} path={\"/\"}>\n            <CreateDeckBtn />\n            <Deck \n              deck={deck} \n              fnObj={fnObj} \n            />\n          </Route>\n          <Route exact={true} path={\"/decks/:deckId/study\"}>\n            <BreadCrumb \n              studyDeck={studyDeck}\n            />\n            <Study \n              fnObj={fnObj} \n              studyDeck={studyDeck}\n              sideToDisplay={sideToDisplay}\n              counter={counter}\n              isNextBtnOn={isNextBtnOn}\n              setCounter={setCounter}\n              setNextBtn={setNextBtn}\n            />\n          </Route>\n          <Route path={\"/decks/:deckId/cards/new\"}>\n            <BreadCrumb \n              studyDeck={studyDeck}\n            />\n            <AddCard \n              studyDeck={studyDeck}\n              fnObj={fnObj}\n              addCardData={addCardData}\n              setAddCardData={setAddCardData}\n            />\n          </Route>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch> \n      </div>\n    </>\n  );\n}\n\nexport default Layout;"]},"metadata":{},"sourceType":"module"}